// Generated by CoffeeScript 1.6.3
(function() {
  var timeseries,
    __slice = [].slice;

  timeseries = function(container, data, opts) {
    var chart, mid, s, tMax, tMin, time, y, yMax, yMin, ys, _i, _j, _k, _len, _len1, _ref;
    _.defaults(opts, {
      timeField: 'time',
      xLabel: 'time',
      yLabel: 'y',
      xZoom: 'user',
      yZoom: 'auto',
      series: []
    });
    chart = new Chart(container, opts);
    time = _.pluck(data, opts.timeField);
    tMin = time[0], mid = 3 <= time.length ? __slice.call(time, 1, _i = time.length - 1) : (_i = 1, []), tMax = time[_i++];
    chart.xResize(tMin, tMax);
    chart.xClamp();
    yMin = null;
    yMax = null;
    _ref = opts.series;
    for (_j = 0, _len = _ref.length; _j < _len; _j++) {
      s = _ref[_j];
      ys = _.pluck(data, s.yField);
      _.defaults(s, {
        color: '#000',
        width: 1
      });
      for (_k = 0, _len1 = ys.length; _k < _len1; _k++) {
        y = ys[_k];
        if (!yMin || yMin > y) {
          yMin = y;
        }
        if (!yMax || yMax < y) {
          yMax = y;
        }
      }
    }
    chart.yResize(yMin, yMax);
    chart.yRound();
    chart.onRender = function(context) {
      var plotData, plotTime, _l, _len2, _ref1, _results;
      plotData = _.filter(data, function(d) {
        var t;
        t = d[opts.timeField];
        return t >= context.xRange.min && t <= context.xRange.max;
      });
      plotTime = _.pluck(plotData, opts.timeField);
      _ref1 = opts.series;
      _results = [];
      for (_l = 0, _len2 = _ref1.length; _l < _len2; _l++) {
        s = _ref1[_l];
        ys = _.pluck(plotData, s.yField);
        context.setStroke(s.color, s.width);
        _results.push(context.stroke(function() {
          var i, _m, _ref2, _results1;
          context.moveTo({
            x: plotTime[0],
            y: ys[0]
          });
          _results1 = [];
          for (i = _m = 1, _ref2 = plotData.length - 1; 1 <= _ref2 ? _m <= _ref2 : _m >= _ref2; i = 1 <= _ref2 ? ++_m : --_m) {
            _results1.push(context.lineTo({
              x: plotTime[i],
              y: ys[i]
            }));
          }
          return _results1;
        }));
      }
      return _results;
    };
    return chart.render();
  };

  window.tinyplot = {
    timeseries: timeseries
  };

}).call(this);

/*
//@ sourceMappingURL=main.map
*/
