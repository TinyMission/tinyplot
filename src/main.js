// Generated by CoffeeScript 1.6.3
(function() {
  var __hasProp = {}.hasOwnProperty,
    __extends = function(child, parent) { for (var key in parent) { if (__hasProp.call(parent, key)) child[key] = parent[key]; } function ctor() { this.constructor = child; } ctor.prototype = parent.prototype; child.prototype = new ctor(); child.__super__ = parent.prototype; return child; },
    __slice = [].slice;

  this.TimeseriesChart = (function(_super) {
    __extends(TimeseriesChart, _super);

    function TimeseriesChart(container, data, opts) {
      var mid, s, tMax, tMin, time, y, yMax, yMin, ys, _i, _j, _k, _len, _len1, _ref;
      _.defaults(opts, {
        timeField: 'time',
        xLabel: 'Time',
        xZoom: 'user',
        yZoom: 'auto',
        series: []
      });
      TimeseriesChart.__super__.constructor.call(this, container, opts);
      this.xFormatter = new TimeFormatter();
      time = _.pluck(data, this.opts.timeField);
      tMin = time[0], mid = 3 <= time.length ? __slice.call(time, 1, _i = time.length - 1) : (_i = 1, []), tMax = time[_i++];
      this.xResize(tMin, tMax);
      this.xClamp();
      yMin = null;
      yMax = null;
      this.data = data;
      _ref = this.opts.series;
      for (_j = 0, _len = _ref.length; _j < _len; _j++) {
        s = _ref[_j];
        ys = _.pluck(data, s.yField);
        _.defaults(s, {
          color: '#000',
          width: 1
        });
        for (_k = 0, _len1 = ys.length; _k < _len1; _k++) {
          y = ys[_k];
          if (!yMin || yMin > y) {
            yMin = y;
          }
          if (!yMax || yMax < y) {
            yMax = y;
          }
        }
      }
      this.yResize(yMin, yMax);
      this.yRound();
      this.render();
    }

    TimeseriesChart.prototype.renderData = function(context) {
      var plotData, plotTime, s, ys, _i, _len, _ref, _results,
        _this = this;
      plotData = _.filter(this.data, function(d) {
        var t;
        t = d[_this.opts.timeField];
        return t >= context.xRange.min && t <= context.xRange.max;
      });
      plotTime = _.pluck(plotData, this.opts.timeField);
      _ref = this.opts.series;
      _results = [];
      for (_i = 0, _len = _ref.length; _i < _len; _i++) {
        s = _ref[_i];
        ys = _.pluck(plotData, s.yField);
        context.setStroke(s.color, s.width);
        _results.push(context.stroke(function() {
          var i, _j, _ref1, _results1;
          context.moveTo({
            x: plotTime[0],
            y: ys[0]
          });
          _results1 = [];
          for (i = _j = 1, _ref1 = plotData.length - 1; 1 <= _ref1 ? _j <= _ref1 : _j >= _ref1; i = 1 <= _ref1 ? ++_j : --_j) {
            _results1.push(context.lineTo({
              x: plotTime[i],
              y: ys[i]
            }));
          }
          return _results1;
        }));
      }
      return _results;
    };

    return TimeseriesChart;

  })(Chart);

  window.tinyplot = {
    TimeseriesChart: TimeseriesChart
  };

}).call(this);

/*
//@ sourceMappingURL=main.map
*/
